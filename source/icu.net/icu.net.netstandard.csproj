<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net451</TargetFrameworks>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <!-- Full .NET Framework properties -->
  <PropertyGroup Condition="'$(TargetFramework)' != 'netstandard1.6'">
    <DefineConstants>$(DefineConstants);FEATURE_ICLONEABLE</DefineConstants>
  </PropertyGroup>

  <!-- .NETStandard 1.6 properties -->
  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard1.6'">
    <DefineConstants>$(DefineConstants);NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <!-- Properties common to all builds, regardless of target framework -->
  <PropertyGroup>
    <DefineConstants>$(DefineConstants);NETSTANDARD</DefineConstants>
    <IntermediateOutputPath>obj\$(ConfiguredBaseOutputPath)</IntermediateOutputPath>
    <OutputPath>..\..\output\$(ConfiguredBaseOutputPath)</OutputPath>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyOriginatorKeyFile>icu.net.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <!-- Exclude SortKey because the desktop framework already has this class. -->
  <ItemGroup Condition="'$(TargetFramework)' != 'netstandard1.6'">
    <Compile Remove="SortKey.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="NuGetAssets\icu.net.netstandard.nuspec" />
  </ItemGroup>

  <!--<Target Name="AfterBuild" Condition="'$(OS)'!='Unix'">
    <PropertyGroup>
      <NuGetBuildFolder>$(SolutionDir)NuGetBuild/$(PlatformAlias)</NuGetBuildFolder>
      <NuGetAssetsFolder>$(ProjectDir)NuGetAssets</NuGetAssetsFolder>
    </PropertyGroup>
    <ItemGroup>
      <IcuDotNetFiles Include="$(TargetDir)..\icu.net.dll*;$(TargetDir)..\icu.net.pdb" />
      <IcuDotNetCoreFiles Include="$(TargetDir)\icu.net.dll*;$(TargetDir)..\icu.net.pdb" />
    </ItemGroup>
    <CreateProperty Value="0" Condition=" '$(BuildCounter)' == ''">
      <Output PropertyName="BuildCounter" TaskParameter="Value" />
    </CreateProperty>
    <MakeDir Directories="$(NuGetBuildFolder)" Condition="!Exists('$(NuGetBuildFolder)')" />
    <Copy SourceFiles="$(NuGetAssetsFolder)/icu.net.netstandard.nuspec" DestinationFiles="$(NuGetBuildFolder)/icu.net.nuspec" />
    <Copy SourceFiles="@(IcuDotNetFiles)" DestinationFolder="$(NuGetBuildFolder)/lib/net40" />
    <Copy SourceFiles="@(IcuDotNetCoreFiles)" DestinationFolder="$(NuGetBuildFolder)/lib/$(PlatformAlias)" />
    
    --><!--<PepitaPackage.CreatePackageTask NuGetBuildDirectory="$(NuGetBuildFolder)" MetadataAssembly="$(TargetPath)" Version="$(GitVersion_NuGetVersion)" />--><!--
    <Message Importance="High" Text="Created nuget package version $(GitVersion_NuGetVersion) ($(GitVersion_FullSemVer)). MetadataAssembly: '$(TargetPath)' Version = '$(GitVersion_NuGetVersion)'" />
  </Target>-->

  <!-- NOTE: This is a hack since the GitVersionTask does not exist for .NET 
    Standard. We are piggy backing off of the package import that the full .NET
    Framework library, icu.net, imports into its project. -->
  <!--<PropertyGroup>
    <GitVersionTaskTargets>..\packages\GitVersionTask.4.0.0-beta0009\build\GitVersionTask.targets</GitVersionTaskTargets>
  </PropertyGroup>
  <Import Project="$(GitVersionTaskTargets)" Condition="Exists('$(GitVersionTaskTargets)')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>Cannot find file {0} required for GitVersion. Has the GitVersionTask package version in icu.net changed? If so, update Property 'GitVersionTaskTargets' in icu.net.netstandard.csproj with the new path. If not, restore packages in icu.net.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(GitVersionTaskTargets)')" Text="$([System.String]::Format('$(ErrorText)', '$(GitVersionTaskTargets)'))" />
  </Target>-->
</Project>